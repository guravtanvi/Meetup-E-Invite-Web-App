{"ast":null,"code":"export var convertErrorCodes=function convertErrorCodes(err){return Promise.reject(err);};export var fetchLoginPageStatus=function fetchLoginPageStatus(){return fetch('/session',{method:'GET'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchRegistrationPage=function fetchRegistrationPage(username,firstName,lastName){return fetch('/registration',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({username:username,firstName:firstName,lastName:lastName})}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchLoginPage=function fetchLoginPage(username){console.log(\"fetch new login\",username);return fetch('/session',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({username:username})}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchMeetupList=function fetchMeetupList(username){return fetch(\"/meetups/\".concat(username),{method:'GET'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json.then(convertErrorCodes);}return response.json();});};export var fetchMeetupForUser=function fetchMeetupForUser(meetupId){return fetch(\"/meetup/\".concat(meetupId),{method:'GET'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchLogout=function fetchLogout(){console.log(\"logout fetch\");return fetch('/session',{method:'DELETE'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.ok;});};export var fetchValidUsers=function fetchValidUsers(){return fetch('/users',{method:'GET'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchDeleteRegistration=function fetchDeleteRegistration(){return fetch('/registration',{method:'DELETE'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.ok;});};export var fetchCreateMeetupPage=function fetchCreateMeetupPage(title,host,place,date,time,agenda,members){var meetup={title:title,agenda:agenda,date:date,time:time,place:place,host:host,members:members};return fetch('/meetup',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify(meetup)}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchUpdateMeetup=function fetchUpdateMeetup(title,id,host,place,date,time,agenda,members){var meetup={title:title,meetupId:id,host:host,place:place,date:date,time:time,agenda:agenda,members:members};console.log(meetup);return fetch('/meetup',{method:'PUT',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify(meetup)}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchUpdateFeedback=function fetchUpdateFeedback(username,isAttending,meetupId){var feedback={username:username,isAttending:isAttending,meetupId:meetupId};return fetch('/response',{method:'PUT',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify(feedback)}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.json();});};export var fetchRemoveCreatedMeetup=function fetchRemoveCreatedMeetup(meetupId){return fetch(\"/meetup/\".concat(meetupId),{method:'DELETE'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.ok;});};export var fetchRemoveInvitedMeetup=function fetchRemoveInvitedMeetup(username,meetupId){return fetch(\"/\".concat(username,\"/meetup/\").concat(meetupId),{method:'DELETE'}).catch(function(){return Promise.reject({code:'NETWORK_ERROR'});}).then(function(response){if(!response.ok){return response.json().then(convertErrorCodes);}return response.ok;});};","map":{"version":3,"sources":["D:/Information System/info6250/project/meetup-app/src/services/services.js"],"names":["convertErrorCodes","err","Promise","reject","fetchLoginPageStatus","fetch","method","catch","code","then","response","ok","json","fetchRegistrationPage","username","firstName","lastName","headers","Headers","body","JSON","stringify","fetchLoginPage","console","log","fetchMeetupList","fetchMeetupForUser","meetupId","fetchLogout","fetchValidUsers","fetchDeleteRegistration","fetchCreateMeetupPage","title","host","place","date","time","agenda","members","meetup","fetchUpdateMeetup","id","fetchUpdateFeedback","isAttending","feedback","fetchRemoveCreatedMeetup","fetchRemoveInvitedMeetup"],"mappings":"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","sourcesContent":["\r\nexport const convertErrorCodes = (err) => Promise.reject(err);\r\n\r\nexport const fetchLoginPageStatus = () => {\r\n    return fetch('/session', {\r\n        method: 'GET'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then(response => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n\r\nexport const fetchRegistrationPage = (username, firstName, lastName) => {\r\n    return fetch('/registration', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json'\r\n        }),\r\n        body: JSON.stringify({ username, firstName, lastName }),\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then(response => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n\r\nexport const fetchLoginPage = (username) => {\r\n    console.log(\"fetch new login\",username);\r\n    return fetch('/session', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n          'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify( {username} ),\r\n      })\r\n      .catch( () => {\r\n        return Promise.reject({code: 'NETWORK_ERROR'});\r\n      })\r\n      .then( response => {\r\n        if(!response.ok) {\r\n          return response.json().then( convertErrorCodes );\r\n        }\r\n        return response.json();\r\n      });\r\n}\r\n\r\nexport const fetchMeetupList = (username) => {\r\n    return fetch(`/meetups/${username}`, {\r\n        method: 'GET'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then(response => {\r\n        if(!response.ok) {\r\n            return response.json.then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const fetchMeetupForUser = (meetupId) => {\r\n    return fetch(`/meetup/${meetupId}`, {\r\n        method: 'GET'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR' });\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const fetchLogout = () => {\r\n    console.log(\"logout fetch\");\r\n\r\n    return fetch('/session', {\r\n        method: 'DELETE',\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.ok;\r\n    });\r\n};\r\n  \r\nexport const fetchValidUsers = () => {\r\n    return fetch('/users', {\r\n        method: 'GET'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR' });\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n\r\nexport const fetchDeleteRegistration = () => {\r\n    return fetch('/registration', {\r\n        method: 'DELETE'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.ok;\r\n    });\r\n};\r\n\r\nexport const fetchCreateMeetupPage = (title, host, place, date, time, agenda, members) => {\r\n    const meetup = {\r\n        title: title,\r\n        agenda: agenda,\r\n        date: date,\r\n        time: time,\r\n        place: place,\r\n        host: host,\r\n        members: members\r\n    };\r\n    return fetch('/meetup', {\r\n    method: 'POST',\r\n    headers: new Headers({\r\n      'content-type': 'application/json',\r\n    }),\r\n      body: JSON.stringify(meetup),\r\n    })\r\n    .catch( () => {\r\n      return Promise.reject({code: 'NETWORK_ERROR'});\r\n    })\r\n    .then( (response) => {\r\n      if(!response.ok) {\r\n          return response.json().then( convertErrorCodes );\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n\r\n  export const fetchUpdateMeetup = (title, id , host, place, date, time, agenda, members) => {\r\n      \r\n    const meetup = {\r\n        title: title,\r\n        meetupId: id,\r\n        host: host,\r\n        place: place,\r\n        date: date,\r\n        time: time,\r\n        agenda: agenda,\r\n        members: members\r\n    };\r\n    console.log(meetup);\r\n\r\n    return fetch('/meetup', {\r\n        method: 'PUT',\r\n        headers: new Headers({\r\n            'content-type': 'application/json'\r\n        }),\r\n        body: JSON.stringify(meetup),\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const fetchUpdateFeedback = (username, isAttending, meetupId) => {\r\n    const feedback = {\r\n        username: username,\r\n        isAttending: isAttending,\r\n        meetupId: meetupId\r\n    };\r\n    return fetch('/response', {\r\n        method: 'PUT',\r\n        headers: new Headers({\r\n            'content-type': 'application/json'\r\n        }),\r\n        body: JSON.stringify(feedback)\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const fetchRemoveCreatedMeetup = (meetupId) => {\r\n    return fetch(`/meetup/${meetupId}`, {\r\n        method: 'DELETE'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.ok;\r\n    });\r\n};\r\n\r\nexport const fetchRemoveInvitedMeetup = (username, meetupId) => {\r\n    return fetch(`/${username}/meetup/${meetupId}`, {\r\n        method: 'DELETE'\r\n    })\r\n    .catch(() => {\r\n        return Promise.reject({ code: 'NETWORK_ERROR'});\r\n    })\r\n    .then((response) => {\r\n        if(!response.ok) {\r\n            return response.json().then(convertErrorCodes);\r\n        }\r\n        return response.ok;\r\n    });\r\n    \r\n};\r\n"]},"metadata":{},"sourceType":"module"}